trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'  # Your self-hosted or Microsoft-hosted agent

variables:
  ACR_NAME: 'lanceoacr'
  AKS_CLUSTER: 'aks-cluster'
  RESOURCE_GROUP: 'k8s-resource-group'
  IMAGE_NAME: 'my-app'
  IMAGE_TAG: '$(Build.BuildId)'

steps:
  - checkout: self

  - task: PowerShell@2
    displayName: 'Authenticate to Azure + ACR'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "üîê Logging into Azure using System-Assigned Identity..."
        try {
          az login --identity --username 25a98eeb-6aec-406f-95e5-f3710e7d5cda
          Write-Host "‚úÖ Logged into Azure."
        } catch {
          Write-Host "‚ùå Azure login failed"
          exit 1
        }

        Write-Host "üîê Logging into Azure Container Registry..."
        try {
          az acr login --name $(ACR_NAME)
          Write-Host "‚úÖ Logged into ACR."
        } catch {
          Write-Host "‚ùå ACR login failed"
          exit 1
        }

  - task: PowerShell@2
    displayName: 'Build & Push Docker Image'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "üê≥ Building Docker image..."
        docker build -t $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG) .

        Write-Host "üöÄ Pushing Docker image to ACR..."
        docker push $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG)

  - task: HelmInstaller@1
    displayName: 'Install Helm'
    inputs:
      helmVersionToInstall: 'latest'

  - task: PowerShell@2
    displayName: 'Deploy to AKS via Helm'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "üîë Fetching AKS credentials..."
        az aks get-credentials --resource-group $(RESOURCE_GROUP) --name $(AKS_CLUSTER)

        Write-Host "üö¢ Deploying Helm chart..."
        helm upgrade --install my-app ./my-app `
          --set image.repository=$(ACR_NAME).azurecr.io/$(IMAGE_NAME) `
          --set image.tag=$(IMAGE_TAG)

