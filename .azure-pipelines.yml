trigger:
  branches:
    include:
      - main  # Runs the pipeline on every push to main

pool:
  name: 'Default'  # Use your self-hosted agent pool

variables:
  ACR_NAME: 'lanceoacr'  # Azure Container Registry name (must be lowercase)
  AKS_CLUSTER: 'aks-cluster'
  RESOURCE_GROUP: 'k8s-resource-group'
  IMAGE_NAME: 'my-app'
  IMAGE_TAG: '$(Build.BuildId)'  # Unique tag for Docker images

steps:
  - checkout: self  # Ensures the latest code is checked out

  - task: PowerShell@2
    displayName: 'Authenticate to Azure and ACR'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "üîê Logging into Azure..."
        try {
          az login --service-principal -u $(AZURE_CLIENT_ID) -p $(AZURE_CLIENT_SECRET) --tenant $(AZURE_TENANT_ID)
          Write-Host "‚úÖ Successfully authenticated to Azure."
        } catch {
          Write-Host "‚ùå Failed to authenticate to Azure. Exiting..."
          exit 1
        }

        Write-Host "üîê Logging into Azure Container Registry..."
        try {
          az acr login --name $(ACR_NAME)
          Write-Host "‚úÖ Successfully authenticated to ACR."
        } catch {
          Write-Host "‚ùå Failed to authenticate to ACR. Exiting..."
          exit 1
        }

  - task: PowerShell@2
    displayName: 'Build & Push Docker Image'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "üê≥ Building Docker image..."
        try {
          docker build -t $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG) .
          Write-Host "‚úÖ Docker image built successfully."
        } catch {
          Write-Host "‚ùå Failed to build Docker image. Exiting..."
          exit 1
        }

        Write-Host "üöÄ Pushing Docker image to ACR..."
        try {
          docker push $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG)
          Write-Host "‚úÖ Docker image pushed successfully."
        } catch {
          Write-Host "‚ùå Failed to push Docker image. Exiting..."
          exit 1
        }

  - task: HelmInstaller@1
    displayName: 'Install Helm'
    inputs:
      helmVersionToInstall: 'latest'

  - task: PowerShell@2
    displayName: 'Deploy to AKS'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "üîë Getting AKS credentials..."
        try {
          az aks get-credentials --resource-group $(RESOURCE_GROUP) --name $(AKS_CLUSTER)
          Write-Host "‚úÖ Successfully retrieved AKS credentials."
        } catch {
          Write-Host "‚ùå Failed to retrieve AKS credentials. Exiting..."
          exit 1
        }

        Write-Host "üö¢ Deploying to AKS with Helm..."
        try {
          helm upgrade --install my-app ./my-app `
            --set image.repository=$(ACR_NAME).azurecr.io/$(IMAGE_NAME) `
            --set image.tag=$(IMAGE_TAG)
          Write-Host "‚úÖ Successfully deployed to AKS."
        } catch {
          Write-Host "‚ùå Failed to deploy to AKS. Exiting..."
          exit 1
        }

