trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  ACR_NAME: 'julienfacr'
  AKS_CLUSTER: 'aks-cluster'
  RESOURCE_GROUP: 'k8s-resource-group'
  IMAGE_NAME: 'my-app'
  IMAGE_TAG: '$(Build.BuildId)'
  SERVICE_CONNECTION: 'Azure-Julien-ServiceConnection'

steps:
- checkout: self

# ‚úÖ Login to Azure using service connection
- task: AzureCLI@2
  inputs:
    azureSubscription: '$(SERVICE_CONNECTION)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "üîê Logged into Azure with service connection."
      az acr login --name $ACR_NAME

# üê≥ Build and Push Docker image to ACR
- task: Docker@2
  displayName: 'Build and Push Docker Image'
  inputs:
    containerRegistry: '$(SERVICE_CONNECTION)'
    repository: '$(IMAGE_NAME)'
    command: 'buildAndPush'
    Dockerfile: 'my-app/Dockerfile'
    tags: |
      $(IMAGE_TAG)

# üõ† Install Helm
- task: HelmInstaller@1
  displayName: 'Install Helm'
  inputs:
    helmVersionToInstall: 'latest'

# üöÄ Deploy to AKS using Helm
- task: AzureCLI@2
  displayName: 'Deploy to AKS with Helm'
  inputs:
    azureSubscription: '$(SERVICE_CONNECTION)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "üîë Getting AKS credentials..."
      az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER --overwrite-existing

      echo "üö¢ Deploying with Helm..."
      helm upgrade --install my-app ./my-app \
        --set image.repository=$ACR_NAME.azurecr.io/$IMAGE_NAME \
        --set image.tag=$IMAGE_TAG

